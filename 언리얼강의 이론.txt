blueprint vs c++

블루트린트란 무엇인가?
-변화가 빠르다 -- 블루프린트를 바꾸면 바로 실행가능
-초보자 친화적
-내장 도구로 쉽게 찾을 수 있음 -- 언리얼 내에서 검색
-언리얼을 위해 만들어진 거라 맞춤임
-디자이너와 아티스트 친화적

c++의 강점
-블루프린트보다 간결하게 읽을 수 있음
-산업표준언어
-속도가 굉장이 빠름
-모든 영역과 기능에 접근할 수 있음
-큰 프로젝트에 적합함

이 둘은 대부분의 기능을 같이 동작할 수 있음


블루프린트 학습
블루프린트
-블루프린트에서의 프로그래밍은 전기 회로를 연결하는 것과 비슷함

이벤트 그래프
- 블루프린트를 위한 캔버스

노드
- 이미 만들어진 기능의 일부(premade funtionality)

이벤트
- 노드가 뭔가 발생해야 할 "때"를 알려줌

핀
- 서로를 연결할 수 있는 소켓 -- 인풋과 아웃풋 핀이 있음

커넥션
- 핀 사이의 와이어

오브젝트
- 무언가를 나타내고자 하는 무언가

액터
- 레벨에 들어갈 수 있는 오브젝트

레퍼런스
- 오브젝트에 데이터가 많아지면 조작하기에 무거워질 수 있음
- 그래서 레퍼런스라는 구조를 사용함
- 메모리에서 이 개체를 어디서 찾는지 알려주는 것

데이터 핀
- 노드에 대한 인풋데이터 혹은 아웃풋데이터

익스큐션핀
- 노드가 실행할 때를 알려줌

force 와 impulse의 차이
- force는 일정시간에 걸쳐서 impulse는 순간적으로

force = mass * acc
impulse = mass * velocity change

















